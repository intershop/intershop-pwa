import { TestBed } from '@angular/core/testing';

import { <%= classify(name) %>Data } from './<%= dasherize(name) %>.interface';
import { <%= classify(name) %>Mapper } from './<%= dasherize(name) %>.mapper';

describe('<%= classify(name) %> Mapper', () => {
  let <%= camelize(name) %>Mapper: <%= classify(name) %>Mapper;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    <%= camelize(name) %>Mapper = TestBed.inject(<%= classify(name) %>Mapper);
  });

  describe('fromData', () => {
    it('should throw when input is falsy', () => {
      expect(() => <%= camelize(name) %>Mapper.fromData(undefined)).toThrow();
    });

    it('should map incoming data to model data', () => {
      const data: <%= classify(name) %>Data = {
        incomingField: 'test',
        otherField: false,
      };
      const mapped = <%= camelize(name) %>Mapper.fromData(data);
      expect(mapped).toHaveProperty('id', 'test');
      expect(mapped).not.toHaveProperty('otherField');
    });
  });
});
