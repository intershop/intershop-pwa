import { Action } from '@ngrx/store';<% if(entity) { %>

import { HttpError } from 'ish-core/models/http-error/http-error.model';
import { <%= classify(entity) %> } from '<% if(feature) { %>../<% } %>../../models/<%= dasherize(entity) %>/<%= dasherize(entity) %>.model';<% } %>

export enum <%= classify(name) %>ActionTypes {
  Load<%= classify(name) %> = '[<%= classify(name) %>] Load <%= classify(name) %>'<% if(entity) { %>,
  Load<%= classify(name) %>Fail = '[<%= classify(name) %> API] Load <%= classify(name) %> Fail',
  Load<%= classify(name) %>Success = '[<%= classify(name) %> API] Load <%= classify(name) %> Success'<% } %>,
}

export class Load<%= classify(name) %> implements Action {
  readonly type = <%= classify(name) %>ActionTypes.Load<%= classify(name) %>;
}
<% if(entity) { %>
export class Load<%= classify(name) %>Fail implements Action {
  readonly type = <%= classify(name) %>ActionTypes.Load<%= classify(name) %>Fail;
  constructor(public payload: { error: HttpError }) {}
}

export class Load<%= classify(name) %>Success implements Action {
  readonly type = <%= classify(name) %>ActionTypes.Load<%= classify(name) %>Success;
  constructor(public payload: { <%= camelize(name) %>: <%= classify(entity) %>[] }) {}
}
<% } %>
export type <%= classify(name) %>Action = Load<%= classify(name) %><% if(entity) { %> | Load<%= classify(name) %>Fail | Load<%= classify(name) %>Success<% } %>;
