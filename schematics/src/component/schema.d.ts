/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Creates a new generic component definition in the given or default project.
 */
export interface AngularComponentOptionsSchema {
  /**
   * The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.
   */
  path?: string;
  /**
   * Extension for Typescript files.
   */
  tsext?: string;
  /**
   * The name of the project.
   */
  project?: string;
  /**
   * The name of the component.
   */
  name: string;
  /**
   * When true, includes styles inline in the component.ts file. Only CSS styles can be included inline. By default, an external styles file is created and referenced in the component.ts file.
   */
  inlineStyle?: boolean;
  /**
   * When true, includes template inline in the component.ts file. By default, an external template file is created and referenced in the component.ts file.
   */
  inlineTemplate?: boolean;
  /**
   * The view encapsulation strategy to use in the new component.
   */
  viewEncapsulation?: 'Emulated' | 'Native' | 'None' | 'ShadowDom';
  /**
   * The change detection strategy to use in the new component.
   */
  changeDetection?: 'Default' | 'OnPush';
  /**
   * The prefix to apply to the generated component selector.
   */
  prefix?: {
    [k: string]: any;
  };
  /**
   * The file extension to use for style files.
   */
  styleext?: string;
  /**
   * When true (the default), generates a  "spec.ts" test file for the new component.
   */
  spec?: boolean;
  /**
   * When true, creates the new files at the top level of the current project.
   */
  flat?: boolean;
  /**
   * When true, does not import this component into the owning NgModule.
   */
  skipImport?: boolean;
  /**
   * The HTML selector to use for this component.
   */
  selector?: string;
  /**
   * The declaring NgModule.
   */
  module?: string;
  /**
   * When true, the declaring NgModule exports this component.
   */
  export?: boolean;
  /**
   * When true, the new component is the entry component of the declaring NgModule.
   */
  entryComponent?: boolean;
  /**
   * When true, applies lint fixes after generating the component.
   */
  lintFix?: boolean;
  [k: string]: any;
}
