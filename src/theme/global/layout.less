// --------------------------------------------------
// Flexbox LESS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
// flex or inline-flex
.flex-display(@display: flex) {
	display: ~"-webkit-@{display}";
	display: ~"-moz-@{display}";
	display: ~"-ms-@{display}box"; // IE10 uses -ms-flexbox
	display: ~"-ms-@{display}"; // IE11
	display: @display;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
.flex(@columns: initial) {
  -webkit-flex: @columns;
     -moz-flex: @columns;
      -ms-flex: @columns;
          flex: @columns;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
.flex-direction(@direction: row) {
  -webkit-flex-direction: @direction;
     -moz-flex-direction: @direction;
      -ms-flex-direction: @direction;
          flex-direction: @direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
.flex-wrap(@wrap: nowrap) {
  -webkit-flex-wrap: @wrap;
     -moz-flex-wrap: @wrap;
      -ms-flex-wrap: @wrap;
          flex-wrap: @wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
.flex-flow(@flow) {
  -webkit-flex-flow: @flow;
     -moz-flex-flow: @flow;
      -ms-flex-flow: @flow;
          flex-flow: @flow;
}

// Display Order
// - applies to: flex items
// <integer>
.flex-order(@order: 0) {
  -webkit-order: @order;
     -moz-order: @order;
      -ms-order: @order;
          order: @order;
}

// Flex grow factor
// - applies to: flex items
// <number>
.flex-grow(@grow: 0) {
  -webkit-flex-grow: @grow;
     -moz-flex-grow: @grow;
      -ms-flex-grow: @grow;
          flex-grow: @grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number> 
.flex-shrink(@shrink: 1) {
  -webkit-flex-shrink: @shrink;
     -moz-flex-shrink: @shrink;
      -ms-flex-shrink: @shrink;
          flex-shrink: @shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width> 
.flex-basis(@width: auto) {
  -webkit-flex-basis: @width;
     -moz-flex-basis: @width;
      -ms-flex-basis: @width;
          flex-basis: @width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
.justify-content(@justify: flex-start) {
  -webkit-justify-content: @justify;
     -moz-justify-content: @justify;
      -ms-justify-content: @justify;
          justify-content: @justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
.align-content(@align: stretch) {
  -webkit-align-content: @align;
     -moz-align-content: @align;
      -ms-align-content: @align;
          align-content: @align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
.align-items(@align: stretch) {
  -webkit-align-items: @align;
     -moz-align-items: @align;
      -ms-align-items: @align;
          align-items: @align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
.align-self(@align: auto) {
  -webkit-align-self: @align;
     -moz-align-self: @align;
      -ms-align-self: @align;
          align-self: @align;
}


//
// Layout

.layout {
	.flex-display();
}

// Direction
.layout-direction-row {
	.flex-direction(row);
}
.layout-direction-row-reverse {
	.flex-direction(row-reverse);
}
.layout-direction-column {
	.flex-direction(column);
}
.layout-direction-column-reverse {
	.flex-direction(column-reverse);
}

// Wrap
.layout-wrap-wrap {
	.flex-wrap(wrap);
}
.layout-wrap-nowrap {
	.flex-wrap(nowrap);
}
.layout-wrap-wrap-reserve {
	.flex-wrap(wrap-reserve);
}


// Justify Content
.layout-justify-content-flex-start {
	.justify-content(flex-start);
}
.layout-justify-content-flex-end {
	.justify-content(flex-end);
}
.layout-justify-content-center {
	.justify-content(center);
}
.layout-justify-content-space-between {
	.justify-content(space-between);
}
.layout-justify-content-space-around {
	.justify-content(space-around);
}


// Align Items
.layout-align-items-flex-start {
	.align-items(flex-start);
}
.layout-align-items-flex-end {
	.align-items(flex-end); 
}
.layout-align-items-center {
	.align-items(center);
}
.layout-align-items-stretch {
	.align-items(stretch);
}
.layout-align-items-baseline {
	.align-items(baseline);
}


// Align Content
.layout-align-content-flex-start {
	.align-content(flex-start);
}
.layout-align-content-flex-end {
	.align-content(flex-end); 
}
.layout-align-content-center {
	.align-content(center);
}
.layout-align-content-stretch {
	.align-content(stretch);
}
.layout-align-content-baseline {
	.align-content(baseline);
}


// Align Self
.layout-align-self-auto {
	.align-self(auto);
}
.layout-align-self-flex-start {
	.align-self(flex-start);
}
.layout-align-self-flex-end {
	.align-self(flex-end);
}
.layout-align-self-center {
	.align-self(center);
}
.layout-align-self-baseline {
	.align-self(baseline);
}
.layout-align-self-stretch {
	.align-self(stretch);
}
