import { FormGroup } from '@angular/forms';
import { UUID } from 'angular2-uuid';
import { AddressFactory } from '../address/address.factory';
import { CredentialsFactory } from '../credentials/credentials.factory';
import { FactoryHelper } from '../factory-helper';
import { CustomerData } from './customer.interface';
import { Customer } from './customer.model';


export class CustomerFactory {

  static fromData(data: CustomerData): Customer {
    const customer: Customer = new Customer();

    FactoryHelper.primitiveMapping<CustomerData, Customer>(data, customer);
    if (data.preferredShipToAddress) {
      customer.preferredShipToAddress = AddressFactory.fromData(data.preferredShipToAddress);
    }
    if (data.preferredInvoiceToAddress) {
      customer.preferredInvoiceToAddress = AddressFactory.fromData(data.preferredInvoiceToAddress);
    }
    if (data.credentials) {
      customer.credentials = CredentialsFactory.fromData(data.credentials);
    }
    if (data.address) {
      customer.address = AddressFactory.fromData(data.address);
    }
    return customer;
  }

  static fromFormValueToData(formValue: any) {
    if (!formValue) {
      return null;
    }

    const customerData = new Object as CustomerData;
    FactoryHelper.primitiveMapping<FormGroup, CustomerData>(formValue, customerData);

    // create and assign a customer number; ToDo: customerNo should be generated by the server
    customerData.customerNo = customerData.customerNo || UUID.UUID();

    // create and assign a new credentials object
    if (formValue.credentials) {
      customerData.credentials = CredentialsFactory.fromFormValueToData(formValue.credentials);
      customerData.email = customerData.email || customerData.credentials.login;
    }

    // create and assign a new address object
    if (formValue.address) {
      customerData.address = AddressFactory.fromFormValueToData(formValue.address);

      // copy address entries to the customer, if empty
      customerData.firstName = customerData.firstName || customerData.address.firstName;
      customerData.lastName = customerData.lastName || customerData.address.lastName;
      customerData.phoneHome = customerData.phoneHome || customerData.address.phoneHome;
      if (customerData.title || customerData.address.title) {
        customerData.title = customerData.title || customerData.address.title;
      }
    }
    return customerData;
  }
}
