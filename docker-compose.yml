# example docker compose that should provide a working hybrid approach for development
# 'jshaukenb' and IPs needs to be replaced with the correct values
# docker compose -f docker-compose_hybrid.yml up --build

version: '3'
services:
  icm:
    image: registry.intershop.de/ispwa/intershop7-devenv/hybrid-approach/a_responsive
    environment:
      - HOST=jmetznernb.localdev.intershop.de
      - HTTP_PORT=5322
      - HTTPS_PORT=5300
      - SECURE_ONLY=true
    ports:
      - '5322:8081'
      - '5323:8444'
    stdin_open: true
    tty: true
    extra_hosts:
      - 'jmetznernb.localdev.intershop.de:10.0.206.205'
  #    restart: always

  pwa:
    build:
      context: .
      # dockerfile: Dockerfile_noSSR
      args:
        serviceWorker: 'false'
        activeThemes: b2b
        # activeThemes: b2c
    environment:
      - ICM_BASE_URL=https://jmetznernb.localdev.intershop.de:5323
      - SSL=true
      - SSR_HYBRID=true
      - TRUST_ICM=true
      - LOGGING=true
    ports:
      - '5301:4200'
    extra_hosts:
      - 'jmetznernb.localdev.intershop.de:10.0.206.205'
  #    restart: always

  nginx:
    build: nginx
    depends_on:
      - pwa
    ports:
      - '5300:443'
      # - '9113:9113'
    environment:
      UPSTREAM_PWA: https://jmetznernb.localdev.intershop.de:5301
      ICM_BASE_URL: https://jmetznernb.localdev.intershop.de:5323
      LOGFORMAT: json
      MULTI_CHANNEL: |
        .+:
          channel: inSPIRED-inTRONICS_Business-Site
          application: '-'
          theme: b2b
    volumes:
      - /home/jmetzner/work/server.crt:/etc/nginx/server.crt
      - /home/jmetzner/work/server.key:/etc/nginx/server.key
    extra_hosts:
      - 'jmetznernb.localdev.intershop.de:10.0.206.205'
  #    restart: always

  solr:
    image: solr:8
    environment:
      SOLR_OPTS: '$SOLR_OPTS -Dsolr.disableConfigSetsCreateAuthChecks=true'
    ports:
      - '8983:8983'
      - '9983:9983'
    command:
      - 'solr-foreground'
      - '-cloud'
  #    restart: always
