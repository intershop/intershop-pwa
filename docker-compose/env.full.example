COMPOSE_PROJECT_NAME = sparque_pwa_demo
# name the docker network to be used
NETWORK_NAME=${COMPOSE_PROJECT_NAME}_network

CPU_SET=0-3

DOCKER_HOST=host.docker.internal

### images

# pwa  image
PWA_IMAGE=intershophub/intershop-pwa-ssr:latest # pwa image
# as long as the sparque integration is not part of an public release use an loacl image:
# - git clone https://github.com/intershop/intershop-pwa.git
# - npm install
# - build local image 'docker build -t intershop-pwa:local .'
#PWA_IMAGE=intershop-pwa:local # pwa image
PWA_NGINX_IMAGE=intershophub/intershop-pwa-nginx:latest # pwa nginx image

# icm image
APPSERVER_IMAGE=intershophub/icm-as:12.2.3
#APPSERVER_IMAGE=intershophub/icm-as:LOCAL

# solr image
CUSTOMIZATION_IMAGE_SOLR=icmbuild.azurecr.io/intershop/icm-as-customization-f_solrcloud:dev-SNAPSHOT

# headless image
#HEADLESS_IMAGE=intershophub/icm-as-customization-headless:LOCAL
HEADLESS_IMAGE=icmbuild.azurecr.io/intershop/icm-as-customization-headless:dev-SNAPSHOT

# demo image
#DEMODATA_IMAGE=intershophub/icm-as-customization-demo-data:LOCAL
DEMODATA_IMAGE=icmbuild.azurecr.io/intershop/icm-as-customization-demo-data:dev-SNAPSHOT

# policy enforcer  image
POLICY_ENFORCER_IMAGE=ishsearchacr.azurecr.io/intershop/search-sparque-policy-enforcer:latest

# sparque wrapper image
SPARQUE_WRAPPER_IMAGE=eusparqueops/sparque-api-wrapper
# in case that pulling of image will denied(unauthorized):
# - git clone https://intershop-com@dev.azure.com/intershop-com/Products/_git/search-sparque-api-wrapper
# - build local image 'docker build -t sparque-wrapper:local .'
#SPARQUE_WRAPPER_IMAGE=sparque-wrapper:local

# webadapter images
WA_IMAGE=intershophub/icm-webadapter:2.6.0
WAA_IMAGE=intershophub/icm-webadapteragent:5.1.0

#configure solr
SOLRDOCKERIMAGE=solr:8.11

# icm settings
SERVER_NAME=appserver
CARTRIDGE_LIST="ft_demo_search"

#configure your icm db properties here
DBTYPE=mssql
JDBCDBNAME=icmDB_develop
JDBCURL=jdbc:sqlserver://icmDB:1433;databaseName=${JDBCDBNAME}
JDBCUSER=intershop
JDBCPASSWORD=intershop
DATABACKUPFOLDER_ICM=[CONFIGURE_ME: local data folder e.g. d:/Development/temp/data/icmDB]
SITES_DIR=[CONFIGURE_ME: local data folder e.g. d:/Development/temp/data/icmSites]
MSSQLDOCKERIMAGE=intershophub/mssql-intershop:2022-2.0

WA_HTTP_PORT=8080
WA_HTTPS_PORT=8443

ENABLE_DEBUG=true
#true|suspend
#DEBUG_ICM=suspend
DEBUG_ICM=true
# debugging container
DEBUGGING_IMAGE=ubuntu:20.04
# may something like "curl bind9-host wget nano dnsutils iproute2 man-db inetutils-ping"
DEBUGGING_PACKAGES="iputils-ping"

# sparque settings
SPARQUE_WRAPPER_PORT=5755
SPARQUE_CACHE_SHOULD_CACHE=false
SPARQUE_WORKSPACES_WITHOUT_PERSONALIZATION=intershop-project-base-v2-team2
SPARQUE_WORKSPACE_ENDPOINTSETS_WITHOUT_AUTH=intershop-project-base-v2-team2|PWA

APP_YML=[path to]policy_enforcer_application.yml

# pwa settings
ICM_BASE_URL = https://${DOCKER_HOST}:${WA_HTTPS_PORT}
SPARQUE_URL = http://${DOCKER_HOST}:${SPARQUE_WRAPPER_PORT}
