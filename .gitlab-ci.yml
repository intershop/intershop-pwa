stages:
  - mrconfig
  - setup
  - build
  - publish
  - deploy
  - universal
  - e2e
  - verify

variables:
  DISABLE_V8_COMPILE_CACHE: 1

start_review_server:
  cache: {}
  dependencies: []
  stage: setup
  tags:
    - shell-executor
    - docker
    - demoserver
  script:
    - docker build -t review-server templates/review-server
    - docker rm -f review-server || true
    - docker run
      --name review-server
      --detach
      --restart always
      -v /var/run/docker.sock:/var/run/docker.sock:ro
      --publish 3000:3000
      review-server /usr/bin/node /review-proxy
  environment:
    name: review-server
    url: http://$DEMO_SERVER_NAME:3000

deploy_review_mock:
  cache: {}
  dependencies: []
  stage: build
  tags:
    - shell-executor
    - docker
    - performance
    - demoserver
  script:
    - docker info --format '{{json .Name}}' || (export DOCKER_HOST=tcp://localhost:2375/ DOCKER_DRIVER=overlay2 && docker info --format '{{json .Name}}') || (export DOCKER_HOST=tcp://docker:2375/ DOCKER_DRIVER=overlay2 && docker info --format '{{json .Name}}')
    - docker build -t ${CI_REGISTRY_IMAGE}:mock-${CI_BUILD_REF}
      --file=templates/Dockerfile_dev
      .
    - PUBLISH_PWA=$(sh .gitlab-ci-get-publish.sh "${CI_COMMIT_REF_SLUG}-mock" 8080)
    - docker rm -f "${CI_COMMIT_REF_SLUG}-mock" || true
    - docker run
      --detach
      $PUBLISH_PWA
      --name "${CI_COMMIT_REF_SLUG}-mock"
      ${CI_REGISTRY_IMAGE}:mock-${CI_BUILD_REF}
    - DEMO_SERVER_IP=$(dig ${DNS_SERVER} +short $DEMO_SERVER_NAME)
    - docker run --rm --add-host $DEMO_SERVER_NAME:$DEMO_SERVER_IP mwendler/wget --wait 60 --tries 20 --retry-connrefused "http://$DEMO_SERVER_NAME:3000/${CI_COMMIT_REF_SLUG}-mock"
  environment:
    name: review/mock-$CI_COMMIT_REF_SLUG
    url: http://$DEMO_SERVER_NAME:3000/${CI_COMMIT_REF_SLUG}-mock
    on_stop: stop_review_mock

stop_review_mock:
  stage: build
  cache: {}
  dependencies: []
  when: manual
  tags:
    - shell-executor
    - docker
    - demoserver
  variables:
    GIT_STRATEGY: none
  script:
    - docker rm -f "${CI_COMMIT_REF_SLUG}-mock" || true
  environment:
    name: review/mock-$CI_COMMIT_REF_SLUG
    action: stop

publish_pwa:
  cache: {}
  dependencies: []
  image: docker:stable
  stage: build
  tags:
    - shell-executor
    - docker
    - performance
  services:
    - docker:dind
  script:
    - VERSION="$(grep "version" package.json | grep -Eo '[0-9][^"]*')"
    - docker info --format '{{json .Name}}' || (export DOCKER_HOST=tcp://localhost:2375/ DOCKER_DRIVER=overlay2 && docker info --format '{{json .Name}}') || (export DOCKER_HOST=tcp://docker:2375/ DOCKER_DRIVER=overlay2 && docker info --format '{{json .Name}}')
    # - test "${CI_COMMIT_REF_SLUG}" = "demo" && ENVIRONMENT=production || ENVIRONMENT=local
    - ENVIRONMENT=production
    - docker build -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_BUILD_REF}
      --build-arg displayVersion="$VERSION ($CI_COMMIT_REF_NAME @ $CI_COMMIT_SHA)"
      --build-arg configuration=$ENVIRONMENT
      --build-arg serviceWorker=true
      --label environment="$ENVIRONMENT"
      --label revision="${CI_BUILD_REF}"
      --label project="${CI_PROJECT_URL}"
      .
    - test -z "${CI_JOB_TOKEN}" || docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - test -z "${CI_JOB_TOKEN}" || docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_BUILD_REF}
    - test -z "${CI_JOB_TOKEN}" || docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_BUILD_REF} ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
    - test -z "${CI_JOB_TOKEN}" || docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}

publish_pwa_latest:
  cache: {}
  dependencies: []
  image: docker:stable
  stage: publish
  only:
    - tags
    - github-develop
    - develop
  tags:
    - shell-executor
    - docker
    - performance
  services:
    - docker:dind
  script:
    - docker info --format '{{json .Name}}' || (export DOCKER_HOST=tcp://localhost:2375/ DOCKER_DRIVER=overlay2 && docker info --format '{{json .Name}}') || (export DOCKER_HOST=tcp://docker:2375/ DOCKER_DRIVER=overlay2 && docker info --format '{{json .Name}}')
    - test -z "${CI_JOB_TOKEN}" || docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - test -z "${CI_JOB_TOKEN}" || docker pull ${CI_REGISTRY_IMAGE}:github-develop
    - test -z "${CI_JOB_TOKEN}" || docker tag ${CI_REGISTRY_IMAGE}:github-develop ${CI_REGISTRY_IMAGE}:latest
    - test -z "${CI_JOB_TOKEN}" || docker push ${CI_REGISTRY_IMAGE}:latest

publish_nginx:
  cache: {}
  dependencies: []
  image: docker:stable
  stage: build
  only:
    changes:
      - nginx/**/*
  tags:
    - shell-executor
    - docker
    - performance
  services:
    - docker:dind
  script:
    - docker info --format '{{json .Name}}' || (export DOCKER_HOST=tcp://localhost:2375/ DOCKER_DRIVER=overlay2 && docker info --format '{{json .Name}}') || (export DOCKER_HOST=tcp://docker:2375/ DOCKER_DRIVER=overlay2 && docker info --format '{{json .Name}}')
    - docker build -t ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_REF_SLUG} nginx
    - test -z "${CI_JOB_TOKEN}" || docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - test -z "${CI_JOB_TOKEN}" || docker push ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_REF_SLUG}

push_reports:
  stage: publish
  cache: {}
  only:
    refs:
      - github-develop
      - develop
  allow_failure: true
  tags:
    - shell-executor
    - docker
    - performance
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}:reports
      --label revision="${CI_BUILD_REF}"
      --label project="${CI_PROJECT_URL}"
      --file Dockerfile_reports
      .
    - test -z "${CI_JOB_TOKEN}" || docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker push ${CI_REGISTRY_IMAGE}:reports

deploy_demo:
  stage: deploy
  cache: {}
  dependencies: []
  only:
    refs:
      - github-develop
      - develop
  tags:
    - shell-executor
    - docker
    - demoserver
  variables:
    GIT_STRATEGY: none
    SERVICE: 'github-develop-pwa-b2c'
    IMAGE: '${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_BUILD_REF}'
  script:
    - DEMO_SERVER_IP=$(dig ${DNS_SERVER} +short $DEMO_SERVER_NAME)
    - test -z "${CI_JOB_TOKEN}" || docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker rm -f ${SERVICE} || true
    - test -z "${CI_JOB_TOKEN}" || docker pull ${IMAGE}
    - docker run
      --detach
      --restart always
      --publish 4321:4200
      --name ${SERVICE}
      --env ICM_BASE_URL=$ICM_BASE_URL
      --env LOGGING=true
      --env PROXY_ICM=true
      --env SENTRY_DSN=${SENTRY_DSN}
      --add-host $DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host b2b.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host b2c.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host de.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host smb.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      ${IMAGE}
  environment:
    name: demo
    url: http://$DEMO_SERVER_NAME:4321

deploy_demo_b2b:
  stage: deploy
  cache: {}
  dependencies: []
  only:
    refs:
      - github-develop
      - develop
  tags:
    - shell-executor
    - docker
    - demoserver
  variables:
    GIT_STRATEGY: none
    SERVICE: 'github-develop-pwa-b2b'
    IMAGE: '${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_BUILD_REF}'
  script:
    - test -z "${CI_JOB_TOKEN}" || docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker rm -f ${SERVICE} || true
    - test -z "${CI_JOB_TOKEN}" || docker pull ${IMAGE}
    - docker run
      --detach
      --restart always
      --publish 4325:4200
      --name ${SERVICE}
      --env ICM_BASE_URL=$ICM_BASE_URL
      --env LOGGING=true
      --env PROXY_ICM=true
      --env THEME="blue|688dc3"
      --env FEATURES=quoting,quickorder,orderTemplates,compare,recently,businessCustomerRegistration,advancedVariationHandling,sentry
      --env ICM_CHANNEL=inSPIRED-inTRONICS_Business-Site
      --env SENTRY_DSN=${SENTRY_DSN}
      ${IMAGE}
  environment:
    name: demo-b2b
    url: http://$DEMO_SERVER_NAME:4325

deploy_demo_nginx:
  stage: deploy
  cache: {}
  dependencies: []
  only:
    refs:
      - github-develop
      - develop
  tags:
    - shell-executor
    - docker
    - demoserver
  variables:
    GIT_STRATEGY: none
    SERVICE: 'github-develop-nginx'
    IMAGE: '${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_REF_SLUG}'
  script:
    - test -z "${CI_JOB_TOKEN}" || docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker rm -f "${SERVICE}" || true
    - docker pull ${IMAGE}
    - docker run
      --detach
      --publish 4326:80
      --name "${SERVICE}"
      -e UPSTREAM_PWA=http://$DEMO_SERVER_NAME:4321
      -e PWA_1_TOPLEVELDOMAIN=net
      -e PWA_1_CHANNEL=inSPIRED-inTRONICS-Site
      -e PWA_1_LANG=en_US
      -e PWA_2_TOPLEVELDOMAIN=de
      -e PWA_2_CHANNEL=inSPIRED-inTRONICS-Site
      -e PWA_2_LANG=de_DE
      -e PWA_3_TOPLEVELDOMAIN=com
      -e PWA_3_CHANNEL=inSPIRED-inTRONICS_Business-Site
      -e PWA_3_FEATURES=quoting,quickorder,orderTemplates,recently,compare,businessCustomerRegistration,advancedVariationHandling,sentry
      -e PWA_3_THEME="blue|688dc3"
      -e PWA_4_TOPLEVELDOMAIN=fr
      -e PWA_4_LANG=fr_FR
      -e PWA_4_CHANNEL=inSPIRED-inTRONICS-Site
      -e PWA_4_APPLICATION=smb-responsive
      -e PWA_4_FEATURES=quoting
      -e PWA_4_THEME="blue|688dc3"
      --add-host $DEMO_SERVER_NAME:$(dig ${DNS_SERVER} +short $DEMO_SERVER_NAME)
      ${IMAGE}
  environment:
    name: demo-nginx
    url: http://$DEMO_SERVER_NAME:4326

deploy_demo_BO:
  stage: deploy
  cache: {}
  dependencies: []
  tags:
    - shell-executor
  variables:
    GIT_STRATEGY: none
  script:
    - echo "done"
  environment:
    name: BackOffice
    url: $BO_URL

deploy_demo_MAIL:
  stage: deploy
  cache: {}
  dependencies: []
  tags:
    - shell-executor
  variables:
    GIT_STRATEGY: none
  script:
    - echo "done"
  environment:
    name: MailServer
    url: $MAILSERVER_URL

deploy_reports:
  stage: deploy
  cache: {}
  dependencies: []
  only:
    refs:
      - github-develop
      - develop
  allow_failure: true
  tags:
    - shell-executor
    - docker
    - demoserver
  variables:
    GIT_STRATEGY: none
    SERVICE: 'intershop-pwa-reports'
    IMAGE: '${CI_REGISTRY_IMAGE}:reports'
  script:
    - test -z "${CI_JOB_TOKEN}" || docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker rm -f ${SERVICE} || true
    - docker run
      --detach
      --restart always
      --publish 4324:8080
      --name ${SERVICE}
      ${IMAGE}
  environment:
    name: reports
    url: http://$DEMO_SERVER_NAME:4324

deploy_review_b2c:
  stage: deploy
  retry: 2
  cache: {}
  dependencies: []
  tags:
    - shell-executor
    - docker
    - demoserver
  script:
    - set -x
    - DEMO_SERVER_IP=$(dig ${DNS_SERVER} +short $DEMO_SERVER_NAME)
    - export ICM_BASE_URL=$(sh e2e/get-icmbaseurl.sh)
    - ICM_HOST=$(expr match "$ICM_BASE_URL" '.*://\([^:]*\).*')
    - ICM_IP=$(dig ${DNS_SERVER} +short $ICM_HOST | tail -n 1)
    - PUBLISH_PWA=$(sh .gitlab-ci-get-publish.sh "${CI_COMMIT_REF_SLUG}-pwa-b2c")
    - test -z "${CI_JOB_TOKEN}" || docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker rm -f "${CI_COMMIT_REF_SLUG}-pwa-b2c" || true
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_BUILD_REF}
    - docker run
      --detach
      $PUBLISH_PWA
      --name "${CI_COMMIT_REF_SLUG}-pwa-b2c"
      -e LOGGING=true
      -e PROXY_ICM=true
      -e SENTRY_DSN=${SENTRY_DSN}
      -e ICM_BASE_URL=${ICM_BASE_URL}
      --add-host $ICM_HOST:$ICM_IP
      --add-host b2b.$CI_COMMIT_REF_SLUG.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host b2c.$CI_COMMIT_REF_SLUG.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host de.$CI_COMMIT_REF_SLUG.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host smb.$CI_COMMIT_REF_SLUG.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host $DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host b2b.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host b2c.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host de.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      --add-host smb.$DEMO_SERVER_NAME:$DEMO_SERVER_IP
      ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_BUILD_REF}
    - PUBLISH_NGINX=$(sh .gitlab-ci-get-publish.sh "${CI_COMMIT_REF_SLUG}-nginx" 80)
    - docker rm -f "${CI_COMMIT_REF_SLUG}-nginx" || true
    - docker pull ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_REF_SLUG} || (docker pull ${CI_REGISTRY_IMAGE}:nginx-github-develop && docker tag ${CI_REGISTRY_IMAGE}:nginx-github-develop ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_REF_SLUG})
    - docker run
      --detach
      $PUBLISH_NGINX
      --name "${CI_COMMIT_REF_SLUG}-nginx"
      --link $CI_COMMIT_REF_SLUG-pwa-b2c
      -e UPSTREAM_PWA=http://$CI_COMMIT_REF_SLUG-pwa-b2c:4200
      -e PWA_1_TOPLEVELDOMAIN=net
      -e PWA_1_CHANNEL=inSPIRED-inTRONICS-Site
      -e PWA_1_LANG=en_US
      -e PWA_2_TOPLEVELDOMAIN=de
      -e PWA_2_CHANNEL=inSPIRED-inTRONICS-Site
      -e PWA_2_LANG=de_DE
      -e PWA_3_TOPLEVELDOMAIN=com
      -e PWA_3_CHANNEL=inSPIRED-inTRONICS_Business-Site
      -e PWA_3_FEATURES=quoting,quickorder,orderTemplates,recently,compare,businessCustomerRegistration,advancedVariationHandling,sentry
      -e PWA_3_THEME="blue|688dc3"
      -e PWA_4_TOPLEVELDOMAIN=fr
      -e PWA_4_LANG=fr_FR
      -e PWA_4_CHANNEL=inSPIRED-inTRONICS-Site
      -e PWA_4_APPLICATION=smb-responsive
      -e PWA_4_FEATURES=quoting
      -e PWA_4_THEME="blue|688dc3"
      ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_REF_SLUG}
    - sleep 10
    - docker run --rm --add-host $DEMO_SERVER_NAME:$DEMO_SERVER_IP mwendler/wget --wait 10 --tries 10 --retry-connrefused "http://$DEMO_SERVER_NAME:3000/${CI_COMMIT_REF_SLUG}-pwa-b2c"
    - docker run --rm --add-host $DEMO_SERVER_NAME:$DEMO_SERVER_IP mwendler/wget --wait 10 --tries 10 --retry-connrefused "http://$DEMO_SERVER_NAME:3000/${CI_COMMIT_REF_SLUG}-nginx"
  environment:
    name: review/b2c-$CI_COMMIT_REF_SLUG
    url: http://$DEMO_SERVER_NAME:3000/${CI_COMMIT_REF_SLUG}-nginx
    on_stop: stop_review_b2c

stop_review_b2c:
  stage: deploy
  cache: {}
  dependencies: []
  when: manual
  tags:
    - shell-executor
    - docker
    - demoserver
  variables:
    GIT_STRATEGY: none
  script:
    - docker rm -f "${CI_COMMIT_REF_SLUG}-pwa-b2c" || true
    - docker rm -f "${CI_COMMIT_REF_SLUG}-nginx" || true
  environment:
    name: review/b2c-$CI_COMMIT_REF_SLUG
    action: stop

deploy_review_b2b:
  stage: deploy
  retry: 2
  cache: {}
  dependencies: []
  tags:
    - shell-executor
    - docker
    - demoserver
  script:
    - set -x
    - DEMO_SERVER_IP=$(dig ${DNS_SERVER} +short $DEMO_SERVER_NAME)
    - export ICM_BASE_URL=$(sh e2e/get-icmbaseurl.sh)
    - ICM_HOST=$(expr match "$ICM_BASE_URL" '.*://\([^:]*\).*')
    - ICM_IP=$(dig ${DNS_SERVER} +short $ICM_HOST | tail -n 1)
    - PUBLISH_PWA=$(sh .gitlab-ci-get-publish.sh "${CI_COMMIT_REF_SLUG}-pwa-b2b")
    - test -z "${CI_JOB_TOKEN}" || docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker rm -f "${CI_COMMIT_REF_SLUG}-pwa-b2b" || true
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_BUILD_REF}
    - docker run
      --detach
      $PUBLISH_PWA
      --name "${CI_COMMIT_REF_SLUG}-pwa-b2b"
      -e LOGGING=true
      -e PROXY_ICM=true
      -e SENTRY_DSN=${SENTRY_DSN}
      -e ICM_BASE_URL=${ICM_BASE_URL}
      -e THEME="blue|688dc3"
      -e ICM_CHANNEL=inSPIRED-inTRONICS_Business-Site
      -e FEATURES=quoting,quickorder,orderTemplates,recently,compare,businessCustomerRegistration,advancedVariationHandling,sentry
      --add-host $ICM_HOST:$ICM_IP
      --add-host $DEMO_SERVER_NAME:$DEMO_SERVER_IP
      ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_BUILD_REF}
    - sleep 10
    - docker run --rm --add-host $DEMO_SERVER_NAME:$DEMO_SERVER_IP mwendler/wget --wait 10 --tries 10 --retry-connrefused "http://$DEMO_SERVER_NAME:3000/${CI_COMMIT_REF_SLUG}-pwa-b2b"
  environment:
    name: review/b2b-$CI_COMMIT_REF_SLUG
    url: http://$DEMO_SERVER_NAME:3000/${CI_COMMIT_REF_SLUG}-pwa-b2b
    on_stop: stop_review_b2b

stop_review_b2b:
  stage: deploy
  cache: {}
  dependencies: []
  when: manual
  tags:
    - shell-executor
    - docker
    - demoserver
  variables:
    GIT_STRATEGY: none
  script:
    - docker rm -f "${CI_COMMIT_REF_SLUG}-pwa-b2b" || true
    - curl --request DELETE --data "name_regex=.*$CI_COMMIT_REF_SLUG.*" --header "PRIVATE-TOKEN:$PRIVATE_API_TOKEN" "https://gitlab.intershop.de/api/v4/projects/$CI_MERGE_REQUEST_PROJECT_ID/registry/repositories/51/tags"
  environment:
    name: review/b2b-$CI_COMMIT_REF_SLUG
    action: stop

deploy_public_demo:
  stage: deploy
  cache: {}
  dependencies: []
  tags:
    - shell-executor
  only:
    - demo
  variables:
    GIT_STRATEGY: none
  script:
    - echo "done"
  environment:
    name: Public Deployment
    url: $PUBLIC_DEMO_URL

deploy_public_BO:
  stage: deploy
  cache: {}
  dependencies: []
  tags:
    - shell-executor
  only:
    - demo
  variables:
    GIT_STRATEGY: none
  script:
    - echo "done"
  environment:
    name: Public Deployment BackOffice
    url: $PUBLIC_BO_URL

housekeeping_images:
  stage: verify
  cache: {}
  dependencies: []
  tags:
    - shell-executor
  only:
    refs:
      - github-develop
      - develop
  variables:
    GIT_STRATEGY: none
  script:
    - curl --request DELETE --data "name_regex=.*" --data 'older_than=2month' --header "PRIVATE-TOKEN:$PRIVATE_API_TOKEN" "https://gitlab.intershop.de/api/v4/projects/$CI_PROJECT_ID/registry/repositories/51/tags"
    - echo "housekeeping complete"

housekeeping_environments:
  cache: {}
  dependencies: []
  image: endeveit/docker-jq
  stage: verify
  only:
    - github-develop
    - develop
  tags:
    - docker-executor
  script:
    - apk add --no-cache bind-tools
    - echo "$(dig ${DNS_SERVER} +short $DEMO_SERVER_NAME) $DEMO_SERVER_NAME" >> /etc/hosts
    - sh .gitlab-ci-housekeeping-environments.sh
    - echo "housekeeping complete"
