plugins {
    /** https://github.com/srs/gradle-node-plugin */
    id "com.moowork.node" version "1.1.1"
}

/** Gretty Plugin for running jetty with static resources
http://akhikhl.github.io/gretty-doc/Getting-started.html  */
apply from:'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'
apply plugin:'groovy'

node {
    version = '6.10.3'
    npmVersion = '3.10.10'
    download = true
    // distBaseUrl = Custom artifactory location here for node/npm.
}

gretty {
    /** same as angular cli */
    httpPort = 4200 
    integrationTestTask = 'test'
    serverConfigFile = "$projectDir/e2e/geb/jetty9.xml"
}

task reset(type:Delete, description:'delete node environment', group:'Node') {
    delete 'node_modules', '.gradle/npm', '.gradle/nodejs'
}
reset.finalizedBy clean

task dist(type: NpmTask, dependsOn:npmInstall, description: 'run npm distribution', group:'Node') {
    args = ['run', 'build']
    inputs.dir('src')
    outputs.dir('dist')
}
test.dependsOn dist
clean.dependsOn cleanDist

dependencies {
    testCompile "org.gebish:geb-spock:1.1.1"
    testCompile("org.spockframework:spock-core:1.0-groovy-2.4") {
        exclude group: "org.codehaus.groovy"
    }
    testCompile "org.codehaus.groovy:groovy-all:2.4.8"
    testCompile 'org.seleniumhq.selenium:selenium-api:3.4.0'

    testRuntime 'io.github.bonigarcia:webdrivermanager:1.6.2'
    testRuntime 'org.seleniumhq.selenium:selenium-chrome-driver:3.4.0'
    testRuntime 'org.seleniumhq.selenium:selenium-firefox-driver:3.4.0'
}

sourceSets {
    test {
        java {
            srcDirs = ['e2e/geb/java']
        }
        groovy {
            srcDirs = ['e2e/geb/groovy']
        }
        resources {
            srcDirs = ['e2e/geb/resources']
        }
    }
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed", "standardOut"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat
    }
}
