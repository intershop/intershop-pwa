name: Development

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '**.md'
      - 'docs/**'

env:
  ICM_BASE_URL: http://pwa-review.northeurope.cloudapp.azure.com:8081

jobs:
  CancelPrevious:
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Old Pipeline
        if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/develop'"
        uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Quality:
    needs: [CancelPrevious]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: npm

      - name: Install root dependencies
        run: npm ci

      - name: Install e2e dependencies
        run: |
          cd e2e
          npm i

      - name: Code Formatting
        run: npm run format

      - name: Check No Changes from Formatting
        run: git diff --exit-code --raw -p --stat

      - name: .dockerignore Sync
        run: npm run update-dockerignore

      - name: Check No Changes from .dockerignore Sync
        run: git diff --exit-code --raw -p --stat

      - name: Compile Angular
        run: npm run build client
        env:
          NODE_OPTIONS: --max_old_space_size=8192

      - name: Compile Unit Tests
        run: npx tsc -p tsconfig.all.json

      - name: Compile Cypress Tests
        run: (cd e2e && npx tsc -p cypress/tsconfig.json)

      - name: Run Escalated ESLint Rules
        run: npm run lint-hard

      - name: Check File Synchronization Status
        run: node scripts/check-file-synchronization

  Jest:
    needs: [CancelPrevious]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: npm

      - name: Install root dependencies
        run: npm ci

      - name: PWA Jest
        run: npm test

      - name: eslint-rules Jest
        run: npm run test:eslint-rules

      - name: schematics Jest
        run: cd schematics && npm run test -- --ci
        env:
          CI: false

  DeadCode:
    needs: [Quality, Jest]
    runs-on: ubuntu-latest
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/develop'"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: npm

      - name: Install root dependencies
        run: npm ci

      - name: Find Dead Code
        run: npx ts-node scripts/find-dead-code

      - name: Find Unused TestBed declarations
        run: |
          npx ts-node scripts/cleanup-testbed origin/develop
          git diff --exit-code --raw -p --stat

  Schematics:
    needs: [Quality, Jest]
    runs-on: ubuntu-latest
    env:
      CI: false

    strategy:
      fail-fast: false
      matrix:
        test: ['normal', 'customization']

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: npm

      - name: Install root dependencies
        run: npm ci

      - name: Test Schematics
        run: |
          bash e2e/test-schematics-${{ matrix.test }}.sh
          npm run lint-hard

  ProductionPWA:
    needs: [Quality, Jest]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Production Build PWA Image
        run: docker-compose build pwa

  Nginx:
    needs: [Quality, Jest]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build Nginx Image
        run: docker-compose build nginx
