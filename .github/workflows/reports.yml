name: Reports

on:
  push:
    branches:
      - 'reports/**'
      - 'develop'

jobs:
  CancelPrevious:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Old Pipeline
        uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  BuildNDeployReports:
    needs: [CancelPrevious]
    if: ${{ github.event.repository.owner.login == 'intershop' }}
    runs-on: ubuntu-latest
    environment:
      name: PWA Reports
      url: https://pwa-gh-review-reports.azurewebsites.net
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Publish Reports Image to Registry
        id: reports
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: reports
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          dockerfile: Dockerfile_reports

      - name: Set Environment
        run: |
          echo "DOCKER_IMAGE_REPORTS=${{ steps.reports.outputs.digest }}"  >> $GITHUB_ENV

      - name: Login to Azure
        run: az login --service-principal --username ${{ secrets.AZURE_SP_USERNAME }} --password ${{ secrets.AZURE_SP_PASSWORD }} --tenant ${{ secrets.AZURE_SP_TENANT }}

      - name: Create or Update Reports App Service
        env:
          APP: '${{ secrets.AZURE_DEMO_RESOURCEGROUP }}-reports'
          GROUP: ${{ secrets.AZURE_DEMO_RESOURCEGROUP }}
        run: |
          az webapp config container set --resource-group $GROUP --name $APP --docker-registry-server-user ${{ secrets.DOCKER_REGISTRY_USERNAME }} --docker-registry-server-password ${{ secrets.DOCKER_REGISTRY_PASSWORD }} --docker-custom-image-name $DOCKER_IMAGE_REPORTS || az webapp create --resource-group $GROUP --plan ${{ secrets.AZURE_DEMO_APPSERVICEPLAN }} --name $APP --docker-registry-server-user ${{ secrets.DOCKER_REGISTRY_USERNAME }} --docker-registry-server-password ${{ secrets.DOCKER_REGISTRY_PASSWORD }} --deployment-container-image-name $DOCKER_IMAGE_REPORTS
          az webapp deployment container config -g $GROUP -n $APP --enable-cd true
