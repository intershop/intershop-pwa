name: TestCI

on: [push]

jobs:
  CancelPrevious:
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Old Pipeline
        uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Quality:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{ runner.os }}-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-

      - name: Install root dependencies
        uses: bahmutov/npm-install@v1

      - name: Install e2e dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: e2e

      - name: Code Quality
        run: |
          npm run format
          bash scripts/ci-test-no-changes.sh 'you probably committed unformatted code'

      - name: Compile
        run: |
          npm run ng -- build --aot
          npx tsc -p tsconfig.spec.json
          (cd e2e && npx tsc -p cypress/tsconfig.json)
          (cd schematics && npm run build && bash ../scripts/ci-test-no-changes.sh 'you probably committed unformatted code')
          (cd tslint-rules && npm run build && bash ../scripts/ci-test-no-changes.sh 'you probably committed unformatted code')

      - name: Escalate TSLint Rules
        run: |
          node scripts/tslint-hard

      - name: Lint by action
        uses: mooyoul/tslint-actions@v1.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          project: 'tsconfig.json'

  Jest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install root dependencies
        uses: bahmutov/npm-install@v1

      - name: Test Jest
        run: |
          npm test

  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install root dependencies
        uses: bahmutov/npm-install@v1

      - name: Disable ServiceWorker
        run: node schematics/customization/service-worker false

      - name: Build SSR
        run: npm run build

      - name: Upload Build Output
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  Universal:
    needs: [Build]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test: ['b2c', 'b2b']

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Download Build Output
        uses: actions/download-artifact@v1
        with:
          name: dist

      - name: Set Environment
        uses: allenevans/set-env@v1.0.0
        with:
          overwrite: true
          LOGGING: true
          PROXY_ICM: true
          ICM_BASE_URL: ${{ secrets.ICM_BASE_URL }}

      - name: Set B2B Environment
        if: matrix.test == 'b2b'
        uses: allenevans/set-env@v1.0.0
        with:
          overwrite: true
          THEME: blue
          ICM_CHANNEL: inSPIRED-inTRONICS_Business-Site
          FEATURES: quoting,compare,recently,businessCustomerRegistration,advancedVariationHandling

      - name: Start SSR
        run: npm run serve &

      - name: Test Universal
        run: sh e2e/test-universal.sh

  Cypress:
    needs: [Build, Universal]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        test: ['mock', 'b2c', 'b2b']

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install root dependencies
        if: matrix.test == 'mock'
        uses: bahmutov/npm-install@v1

      - name: Download Build Output
        if: matrix.test != 'mock'
        uses: actions/download-artifact@v1
        with:
          name: dist

      - name: Set Environment
        uses: allenevans/set-env@v1.0.0
        with:
          overwrite: true
          PWA_BASE_URL: http://localhost:4200
          LOGGING: true
          PROXY_ICM: true
          ICM_BASE_URL: ${{ secrets.ICM_BASE_URL }}
          BROWSER: chrome

      - name: Set B2B Environment
        if: matrix.test == 'b2b'
        uses: allenevans/set-env@v1.0.0
        with:
          overwrite: true
          THEME: blue
          ICM_CHANNEL: inSPIRED-inTRONICS_Business-Site
          FEATURES: quoting,compare,recently,businessCustomerRegistration,advancedVariationHandling

      - name: Start SSR
        if: matrix.test != 'mock'
        run: npm run serve &

      - name: Start Dev-Server
        if: matrix.test == 'mock'
        run: npm run ng -- serve &

      - name: Cypress
        uses: cypress-io/github-action@v1.24.0
        with:
          wait-on: 'http://localhost:4200'
          wait-on-timeout: 180
          working-directory: e2e
          command: node cypress-ci-e2e **/*${{ matrix.test }}*.e2e-spec.ts

      - name: Upload Screenshots
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: screenshots
          path: e2e/cypress/screenshots

      - name: Upload Videos
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: videos
          path: e2e/cypress/videos

  Schematics:
    needs: [Build, Quality, Jest, Universal]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install root dependencies
        uses: bahmutov/npm-install@v1

      - name: Test Schematics
        run: |
          bash e2e/test-schematics.sh
          node scripts/tslint-hard
          npm run lint
