name: DemoServerUp

on:
  workflow_dispatch:

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_WEBAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  ICM_BASE_URL: http://pwa-review.northeurope.cloudapp.azure.com:8081

jobs:
  CancelPrevious:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Old Pipeline
        uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-and-deploy:
    needs: [CancelPrevious]
    if: github.event.repository.full_name == 'intershop/intershop-pwa'
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Publish Universal Image to Registry
        id: universal
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          serviceWorker: false
          displayVersion: ${{ github.event.after }}
          testing: true
          NODE_OPTIONS: --max_old_space_size=8192
        with:
          name: universal
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          buildargs: serviceWorker,configuration,displayVersion,testing
      - name: Set Environment
        run: |
          echo "BRANCH_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_UNIVERSAL=${{ steps.universal.outputs.digest }}" >> $GITHUB_ENV
          printf 'AZURE_WEBAPP_NAME=%.60s' "${{ secrets.AZURE_DEMO_RESOURCEGROUP }}-$( echo ${{ github.event.ref }} | sed -e 's/refs\/heads\///' | sed -e 's/[^a-zA-Z0-9-]/-/g' )" >> $GITHUB_ENV
      - name: Login via Azure CLI
        run: az login --service-principal --username ${{ secrets.AZURE_SP_USERNAME }} --password ${{ secrets.AZURE_SP_PASSWORD }} --tenant ${{ secrets.AZURE_SP_TENANT }}
      - name: Create or Update containerized WebApp
        env:
          APP: ${{ env.AZURE_WEBAPP_NAME }}
          GROUP: ${{ secrets.AZURE_DEMO_RESOURCEGROUP }}
        run: |
          az webapp config container set --resource-group $GROUP --name $APP --docker-registry-server-user ${{ secrets.DOCKER_REGISTRY_USERNAME }} --docker-registry-server-password ${{ secrets.DOCKER_REGISTRY_PASSWORD }} --docker-custom-image-name $DOCKER_IMAGE_UNIVERSAL || az webapp create --resource-group $GROUP --plan ${{ secrets.AZURE_DEMO_APPSERVICEPLAN }} --name $APP --docker-registry-server-user ${{ secrets.DOCKER_REGISTRY_USERNAME }} --docker-registry-server-password ${{ secrets.DOCKER_REGISTRY_PASSWORD }} --deployment-container-image-name $DOCKER_IMAGE_UNIVERSAL
          az webapp config appsettings set -g $GROUP -n $APP --settings LOGGING=true ICM_BASE_URL=$ICM_BASE_URL
          az webapp deployment container config -g $GROUP -n $APP --enable-cd true
      - name: Find Pull Request
        uses: juliangruber/find-pull-request-action@v1
        id: find-pull-request
        with:
          branch: ${{ env.BRANCH_NAME }}
      - name: Found Pull Request
        run: echo "Pull Request for Branch ${{ env.BRANCH_NAME }} -> ${{ steps.find-pull-request.outputs.number }} (${{ steps.find-pull-request.outputs.head-sha }})"
      - name: Create Demo Server Comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ steps.find-pull-request.outputs.number }}
          body: |
            Azure Demo Servers are available:
            - [Universal B2B](http://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/home)
            - [Universal B2C](http://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/home;theme=b2c)
